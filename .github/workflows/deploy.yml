name: Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose environment (dev or qa)'
        required: true
      deploy_aks:
        description: 'Deploy AKS in DEV environment? (true/false)'
        default: 'false'
        required: false

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2


      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: |
          if [ "${{ inputs.environment }}" == "dev" ]; then
            terraform -chdir=environments/dev init \
              -backend-config="storage_account_name=${{ secrets.DEV_TFSTATE_STORAGE_ACCOUNT_NAME }}" \
              -backend-config="access_key=${{ secrets.DEV_TFSTATE_STORAGE_KEY }}"
          else
            terraform -chdir=environments/qa init \
              -backend-config="storage_account_name=${{ secrets.QA_TFSTATE_STORAGE_ACCOUNT_NAME }}" \
              -backend-config="access_key=${{ secrets.QA_TFSTATE_STORAGE_KEY }}"
          fi

      - name: Terraform Plan
        run: |
          if [ "${{ inputs.environment }}" == "dev" ]; then
            terraform -chdir=environments/dev plan \
              -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
              -var "deploy_aks=${{ inputs.deploy_aks }}" \
              -var "admin_group_object_id=${{ secrets.AKS_ADMIN_GROUP_ID }}" \
              -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
              -out=tfplan || exit 1
            ls -la environments/dev/
          else
            terraform -chdir=environments/qa plan \
              -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
              -out=tfplan || exit 1
            ls -la environments/qa/
          fi

      - name: Upload Terraform Plan
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ inputs.environment }}
          path: environments/${{ inputs.environment }}/tfplan

  apply:
    runs-on: ubuntu-latest
    needs: plan
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2


      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{inputs.environment }}
          path: environments/${{ inputs.environment }}

      - name: Terraform Apply
        run: |
          terraform -chdir=environments/${{ inputs.environment }} apply tfplan
